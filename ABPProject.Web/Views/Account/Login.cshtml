@{
    Layout = null;
}
@using Abp.Web.Mvc.Extensions
@using Microsoft.Owin.Security
@using System.Web.Optimization
@model ABPProject.Web.Models.Account.LoginFormViewModel
<!DOCTYPE html>
<html lang="en">
<head>
    <title>登录</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="cache-control" content="no-cache">
    <meta http-equiv="expires" content="Thu, 19 Nov 1900 08:52:00 GMT">
    @Html.IncludeStyle("~/Views/Account/Login.css")
    @Styles.Render("~/Bundles/loginpage/css")
</head>

<body id="signin-page">
    <div class="container">
        <div id="LoginArea" class="row">
            <div class="col-lg-12">
                <div class="well bs-component">
                    <form id="LoginForm" class="form-horizontal" action="@(Url.Action("Login", "Account"))" method="POST">
                        <fieldset>
                            <legend>@L("LogIn")</legend>
                            @if (Model.IsMultiTenancyEnabled)
                            {
                                <div class="form-group">
                                    <div class="col-lg-12">
                                        <input type="text" class="form-control" id="TenancyName" placeholder="租户名(非租户为空即可)" maxlength="@ABPProject.MultiTenancy.Tenant.MaxTenancyNameLength">
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input type="hidden" id="TenancyName" value="">
                            }
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <input type="text" class="form-control" id="EmailAddressInput" placeholder="@L("UserNameOrEmail")" required maxlength="@ABPProject.Users.User.MaxEmailAddressLength">
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <input type="password" class="form-control" id="PasswordInput" placeholder="@L("Password")" required maxlength="@ABPProject.Users.User.MaxPlainPasswordLength">
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" id="RememberMeInput">
                                            <span class="ripple"></span>
                                            <span class="check"></span> @L("RememberMe")
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <input id="ReturnUrl" type="hidden" name="ReturnUrl" value="@Model.ReturnUrl" />
                            <input id="ReturnUrlHash" type="hidden" name="returnUrlHash" />
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <button id="LoginButton" type="submit" class="btn btn-primary"><i class="fa fa-sign-in"></i> @L("LogIn")</button>
                                </div>
                            </div>
                        </fieldset>
                    </form>
                    @{
                        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
                    }
                    @if (loginProviders.Count > 0)
                    {
                        <p>@L("OrLoginWith"):</p>


                        using (Html.BeginForm("ExternalLogin", "Account", method: FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                            <input type="hidden" name="provider" value="" />

                            foreach (var provider in loginProviders)
                            {
                                <a class="btn btn-default btn-sm social-login-link" title="@provider.AuthenticationType"
                                   data-provider="@provider.AuthenticationType"
                                   href="javascript:;">
                                    <i class="fa fa-@(provider.AuthenticationType.ToLower())"></i> @provider.AuthenticationType
                                </a>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    @Scripts.Render("~/Bundles/vendor/js/bottom")
    @Html.IncludeScript("~/Views/Account/Login.js")
</body>
</html>


