WARN  2017-08-25 16:42:53,197 [183  ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:42:58,463 [183  ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:03,713 [52   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:08,945 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:14,167 [46   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:19,369 [161  ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:24,605 [110  ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:29,821 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:35,059 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 16:43:40,373 [161  ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-08-25 16:43:43,184 [28   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 16:43:43,185 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 16:43:43,186 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 16:43:43,186 [28   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 16:43:49,459 [37   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 16:43:49,474 [37   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 16:43:49,480 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,482 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,482 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,482 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,483 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,483 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,483 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,483 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,483 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,484 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,484 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,484 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,484 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,484 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,484 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,485 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:49,488 [37   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 16:43:49,600 [37   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 16:43:49,600 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 16:43:49,600 [37   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 16:43:49,600 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 16:43:49,966 [37   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 16:43:51,069 [37   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 16:43:51,075 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 16:43:51,082 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 16:43:51,085 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 16:43:51,086 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 16:43:51,158 [37   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 16:43:51,205 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 34 classes define auto mapping attributes
DEBUG 2017-08-25 16:43:51,205 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 16:43:51,208 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 16:43:51,209 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 16:43:51,210 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 16:43:52,687 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 16:43:52,689 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 16:43:52,690 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 16:43:52,691 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 16:43:52,693 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 16:43:52,694 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 16:43:52,695 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 16:43:52,696 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 16:43:52,697 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 16:43:52,699 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 16:43:52,700 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 16:43:52,701 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 16:43:52,702 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 16:43:53,187 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"57340a25-6947-47cd-a316-2391b03b4af7","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:43:53.1429402+08:00","Properties":{}}
DEBUG 2017-08-25 16:44:25,605 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 57340a25-6947-47cd-a316-2391b03b4af7
DEBUG 2017-08-25 16:44:26,596 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fbf81860-2994-43f6-8904-af863bf3ba51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:44:26.5966157+08:00","Properties":{}}
DEBUG 2017-08-25 16:44:26,624 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fbf81860-2994-43f6-8904-af863bf3ba51
DEBUG 2017-08-25 16:45:10,284 [34   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fbf81860-2994-43f6-8904-af863bf3ba51
DEBUG 2017-08-25 16:45:11,161 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"44bcebff-21dd-4dab-b153-39dbdc6367a3","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:45:11.1619505+08:00","Properties":{}}
DEBUG 2017-08-25 16:45:11,167 [63   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 44bcebff-21dd-4dab-b153-39dbdc6367a3
DEBUG 2017-08-25 16:45:16,509 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 44bcebff-21dd-4dab-b153-39dbdc6367a3
DEBUG 2017-08-25 16:45:17,195 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f7ac4c5b-f61f-4d0f-97cc-a8eed67d44ae","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:45:17.1950208+08:00","Properties":{}}
DEBUG 2017-08-25 16:45:17,198 [34   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f7ac4c5b-f61f-4d0f-97cc-a8eed67d44ae
DEBUG 2017-08-25 16:45:19,554 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f7ac4c5b-f61f-4d0f-97cc-a8eed67d44ae
DEBUG 2017-08-25 16:45:20,275 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e393cede-8899-40c8-9d54-8d5151797189","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:45:20.2759921+08:00","Properties":{}}
DEBUG 2017-08-25 16:45:20,278 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e393cede-8899-40c8-9d54-8d5151797189
DEBUG 2017-08-25 16:45:59,389 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e393cede-8899-40c8-9d54-8d5151797189
DEBUG 2017-08-25 16:46:00,255 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e5868a76-9111-4cb5-9e92-f8abbca47540","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:46:00.255918+08:00","Properties":{}}
DEBUG 2017-08-25 16:46:00,261 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e5868a76-9111-4cb5-9e92-f8abbca47540
DEBUG 2017-08-25 16:46:15,976 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e5868a76-9111-4cb5-9e92-f8abbca47540
DEBUG 2017-08-25 16:46:17,392 [52   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"848e8258-9468-4cea-bb60-4800fb25b11a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:46:17.3925365+08:00","Properties":{}}
DEBUG 2017-08-25 16:46:17,399 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 848e8258-9468-4cea-bb60-4800fb25b11a
DEBUG 2017-08-25 16:47:06,333 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 848e8258-9468-4cea-bb60-4800fb25b11a
DEBUG 2017-08-25 16:47:07,811 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b3c4669a-607d-47e7-854b-3b429ebf075b","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:47:07.8115966+08:00","Properties":{}}
DEBUG 2017-08-25 16:47:07,818 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b3c4669a-607d-47e7-854b-3b429ebf075b
DEBUG 2017-08-25 16:48:28,647 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b3c4669a-607d-47e7-854b-3b429ebf075b
DEBUG 2017-08-25 16:48:30,263 [156  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"86eda8c0-25c0-4597-94e1-6ba9e48f77e7","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:48:30.2628917+08:00","Properties":{}}
DEBUG 2017-08-25 16:48:30,272 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 86eda8c0-25c0-4597-94e1-6ba9e48f77e7
DEBUG 2017-08-25 16:48:33,254 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 86eda8c0-25c0-4597-94e1-6ba9e48f77e7
DEBUG 2017-08-25 16:48:34,798 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8fbfe09f-34dc-4b61-9d41-6f8132165311","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:48:34.798529+08:00","Properties":{}}
DEBUG 2017-08-25 16:48:34,804 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8fbfe09f-34dc-4b61-9d41-6f8132165311
DEBUG 2017-08-25 16:49:09,419 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8fbfe09f-34dc-4b61-9d41-6f8132165311
DEBUG 2017-08-25 16:49:11,095 [63   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"572229b3-ca4b-495e-8593-5ab85b31ae6c","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:49:11.0959591+08:00","Properties":{}}
DEBUG 2017-08-25 16:49:11,110 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 572229b3-ca4b-495e-8593-5ab85b31ae6c
DEBUG 2017-08-25 16:49:20,299 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 572229b3-ca4b-495e-8593-5ab85b31ae6c
DEBUG 2017-08-25 16:49:21,664 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"025403d0-5069-4d6e-8b6a-7edfc65769ec","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:49:21.6645636+08:00","Properties":{}}
DEBUG 2017-08-25 16:49:21,671 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 025403d0-5069-4d6e-8b6a-7edfc65769ec
DEBUG 2017-08-25 16:49:56,291 [52   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 025403d0-5069-4d6e-8b6a-7edfc65769ec
DEBUG 2017-08-25 16:49:57,775 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"62fadbe7-4a37-460f-9808-3b5e2575b3e7","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:49:57.7759059+08:00","Properties":{}}
DEBUG 2017-08-25 16:49:57,788 [34   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 62fadbe7-4a37-460f-9808-3b5e2575b3e7
DEBUG 2017-08-25 16:54:53,516 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 62fadbe7-4a37-460f-9808-3b5e2575b3e7
DEBUG 2017-08-25 16:54:54,909 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5f9fd82c-fa58-4165-9956-10bd4426a368","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T16:54:54.9093509+08:00","Properties":{}}
DEBUG 2017-08-25 16:54:54,915 [52   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5f9fd82c-fa58-4165-9956-10bd4426a368
DEBUG 2017-08-25 17:22:24,973 [52   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:22:24,997 [52   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:22:24,998 [52   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:22:24,998 [52   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:22:31,343 [37   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:22:31,359 [37   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:22:31,366 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,368 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,368 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,368 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,368 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,368 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,369 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,370 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,370 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,370 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:31,373 [37   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:22:31,702 [37   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:22:31,702 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:22:31,702 [37   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:22:31,702 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:22:32,553 [37   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:22:34,360 [37   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:22:34,370 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:22:34,430 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:22:34,537 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:22:34,538 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:22:34,647 [37   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:22:34,700 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 34 classes define auto mapping attributes
DEBUG 2017-08-25 17:22:34,700 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:22:34,703 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:22:34,703 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:22:34,703 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:22:34,704 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:22:34,705 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:22:36,280 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:22:36,281 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:22:36,282 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:22:36,284 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:22:36,286 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:22:36,287 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:22:36,289 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:22:36,290 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:22:36,292 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:22:36,293 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:22:36,294 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:22:36,296 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:22:36,297 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:22:36,823 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"5f9fd82c-fa58-4165-9956-10bd4426a368","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:22:36.770086+08:00","Properties":{}}
DEBUG 2017-08-25 17:22:46,338 [63   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5f9fd82c-fa58-4165-9956-10bd4426a368
DEBUG 2017-08-25 17:22:47,444 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"59baa5b0-5d8b-461e-b923-12b217ac357a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:22:47.4441983+08:00","Properties":{}}
DEBUG 2017-08-25 17:22:47,467 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 59baa5b0-5d8b-461e-b923-12b217ac357a
DEBUG 2017-08-25 17:25:08,904 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 59baa5b0-5d8b-461e-b923-12b217ac357a
DEBUG 2017-08-25 17:25:09,922 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2648d4cb-5d38-4578-9436-2864b286ed72","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:25:09.9223057+08:00","Properties":{}}
DEBUG 2017-08-25 17:25:09,929 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2648d4cb-5d38-4578-9436-2864b286ed72
DEBUG 2017-08-25 17:25:10,908 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2648d4cb-5d38-4578-9436-2864b286ed72
DEBUG 2017-08-25 17:25:13,104 [156  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"873ed00c-d256-4fbf-a751-8df8e99be6c6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:25:13.1048723+08:00","Properties":{}}
DEBUG 2017-08-25 17:25:13,108 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 873ed00c-d256-4fbf-a751-8df8e99be6c6
DEBUG 2017-08-25 17:25:27,576 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 873ed00c-d256-4fbf-a751-8df8e99be6c6
DEBUG 2017-08-25 17:25:29,371 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c9c3ebb3-5a9c-498c-9f29-ed796070a0a0","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:25:29.3718193+08:00","Properties":{}}
DEBUG 2017-08-25 17:25:29,383 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c9c3ebb3-5a9c-498c-9f29-ed796070a0a0
DEBUG 2017-08-25 17:27:49,368 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c9c3ebb3-5a9c-498c-9f29-ed796070a0a0
DEBUG 2017-08-25 17:27:50,901 [139  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8f6647d5-37ee-40d0-9ed0-7f5f9eef2a9a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:27:50.9017333+08:00","Properties":{}}
DEBUG 2017-08-25 17:27:50,908 [63   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8f6647d5-37ee-40d0-9ed0-7f5f9eef2a9a
DEBUG 2017-08-25 17:29:02,000 [13   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:29:02,002 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:29:02,002 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:29:02,002 [13   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:29:07,468 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:29:07,483 [16   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:29:07,491 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,492 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,493 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,493 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,493 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,493 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,493 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,493 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,494 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,494 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,494 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,494 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,494 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,494 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,495 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,495 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:07,498 [16   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:29:07,615 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:29:07,616 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:29:07,616 [16   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:29:07,616 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:29:08,043 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:29:09,265 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:29:09,272 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:29:09,281 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:29:09,283 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:29:09,285 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:29:09,371 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:29:09,423 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 34 classes define auto mapping attributes
DEBUG 2017-08-25 17:29:09,423 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:29:09,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:29:09,427 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:29:09,427 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:29:09,427 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:29:09,427 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:29:09,427 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:29:09,427 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:29:09,428 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:29:09,429 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:29:09,430 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:29:09,430 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:29:09,430 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:29:09,430 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:29:09,430 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:29:10,925 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:29:10,926 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:29:10,928 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:29:10,930 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:29:10,931 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:29:10,932 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:29:10,933 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:29:10,934 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:29:10,936 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:29:10,937 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:29:10,938 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:29:10,939 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:29:10,940 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:29:10,942 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:29:11,487 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"8f6647d5-37ee-40d0-9ed0-7f5f9eef2a9a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:29:11.4219885+08:00","Properties":{}}
DEBUG 2017-08-25 17:29:19,646 [110  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8f6647d5-37ee-40d0-9ed0-7f5f9eef2a9a
DEBUG 2017-08-25 17:29:21,097 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"868779cd-4185-4341-9caf-59202d97d2b5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:29:21.0975606+08:00","Properties":{}}
DEBUG 2017-08-25 17:29:21,126 [34   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 868779cd-4185-4341-9caf-59202d97d2b5
DEBUG 2017-08-25 17:33:19,385 [24   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:33:19,385 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:33:19,386 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:33:19,386 [24   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:33:22,661 [6    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:33:22,786 [6    ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:33:22,793 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,795 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,795 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,795 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,795 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,795 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,796 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,796 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,796 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,796 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,796 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,797 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,797 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,797 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,797 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,797 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:22,800 [6    ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:33:23,174 [6    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:33:23,174 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:33:23,174 [6    ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:33:23,174 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:33:23,531 [6    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:33:24,180 [6    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:33:24,187 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:33:24,192 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:33:24,194 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:33:24,195 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:33:24,271 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:33:24,322 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 34 classes define auto mapping attributes
DEBUG 2017-08-25 17:33:24,322 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:33:24,326 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:33:24,326 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:33:24,326 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:33:24,326 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:33:24,326 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:33:24,327 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:33:24,328 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:33:25,689 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:33:25,691 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:33:25,692 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:33:25,693 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:33:25,694 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:33:25,695 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:33:25,697 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:33:25,698 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:33:25,699 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:33:25,700 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:33:25,701 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:33:25,703 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:33:25,704 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:33:25,705 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:33:27,381 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"868779cd-4185-4341-9caf-59202d97d2b5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:33:27.3326223+08:00","Properties":{}}
DEBUG 2017-08-25 17:46:51,823 [198  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:46:51,824 [198  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:46:51,825 [198  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:46:51,825 [198  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:46:54,477 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:46:54,619 [16   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:46:54,626 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,629 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,630 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,630 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,630 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,631 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,631 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,631 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,631 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,631 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:54,634 [16   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:46:54,956 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:46:54,957 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:46:54,957 [16   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:46:54,957 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:46:55,339 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:46:56,017 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:46:56,024 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:46:56,057 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:46:56,059 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:46:56,060 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:46:56,135 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:46:56,188 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 34 classes define auto mapping attributes
DEBUG 2017-08-25 17:46:56,188 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:46:56,192 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:46:56,193 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:46:56,194 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:46:57,660 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:46:57,661 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:46:57,663 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:46:57,664 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:46:57,665 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:46:57,667 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:46:57,668 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:46:57,669 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:46:57,670 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:46:57,672 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:46:57,673 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:46:57,674 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:46:57,676 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:46:57,677 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:46:59,239 [86   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"868779cd-4185-4341-9caf-59202d97d2b5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:46:59.1842598+08:00","Properties":{}}
DEBUG 2017-08-25 17:47:04,935 [91   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:47:04,935 [91   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:47:04,936 [91   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:47:04,936 [91   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:47:07,450 [6    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:47:07,569 [6    ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:47:07,576 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,578 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,578 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,578 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,578 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,579 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,579 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,579 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,579 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,580 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,580 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,580 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,580 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,580 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,580 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,581 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:07,584 [6    ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:47:07,845 [6    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:47:07,845 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:47:07,845 [6    ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:47:07,845 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:47:08,215 [6    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:47:08,966 [6    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:47:08,972 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:47:08,976 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:47:08,978 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:47:08,979 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:47:09,051 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:47:09,105 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 34 classes define auto mapping attributes
DEBUG 2017-08-25 17:47:09,105 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:47:09,109 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:47:09,109 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:47:09,109 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:47:09,109 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:47:09,109 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:47:09,109 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:47:09,110 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:47:09,111 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:47:10,648 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:47:10,650 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:47:10,651 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:47:10,652 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:47:10,654 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:47:10,655 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:47:10,656 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:47:10,658 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:47:10,659 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:47:10,660 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:47:10,661 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:47:10,662 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:47:10,664 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:47:10,665 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:47:12,075 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"868779cd-4185-4341-9caf-59202d97d2b5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:47:12.0287806+08:00","Properties":{}}
DEBUG 2017-08-25 17:50:20,725 [28   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:50:20,726 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:50:20,727 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:50:20,727 [28   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:50:26,578 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:50:26,594 [16   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:50:26,601 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,603 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,603 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,603 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,603 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,603 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,604 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,604 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,604 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,604 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,604 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,605 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,605 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,605 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,605 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,605 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:26,608 [16   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:50:26,796 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:50:26,796 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:50:26,796 [16   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:50:26,796 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:50:27,187 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:50:28,485 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:50:28,491 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:50:28,499 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:50:28,501 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:50:28,502 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:50:28,585 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:50:28,640 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 36 classes define auto mapping attributes
DEBUG 2017-08-25 17:50:28,640 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:50:28,644 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:50:28,644 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.EditSupplierInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.SupplierListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:50:28,645 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:50:28,646 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:50:30,037 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:50:30,039 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:50:30,040 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:50:30,041 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Suppliers.ISupplierAppService' with service name 'app/supplier'.
DEBUG 2017-08-25 17:50:30,042 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:50:30,044 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:50:30,045 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:50:30,046 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:50:30,047 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:50:30,049 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:50:30,050 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:50:30,052 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:50:30,053 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:50:30,054 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:50:30,055 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:50:30,512 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"868779cd-4185-4341-9caf-59202d97d2b5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:50:30.4626579+08:00","Properties":{}}
WARN  2017-08-25 17:50:35,961 [161  ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 17:50:41,209 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 17:50:46,424 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 17:50:51,685 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 17:50:56,945 [69   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 17:51:02,172 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-08-25 17:51:07,460 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-08-25 17:51:09,142 [24   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:51:09,143 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:51:09,144 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:51:09,144 [24   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:51:14,477 [6    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:51:14,493 [6    ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:51:14,499 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,501 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,501 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,502 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,502 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,502 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,502 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,502 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,502 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,503 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:14,506 [6    ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:51:14,654 [6    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:51:14,654 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:51:14,654 [6    ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:51:14,654 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:51:15,029 [6    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:51:16,127 [6    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:51:16,134 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:51:16,140 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:51:16,142 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:51:16,143 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:51:16,224 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:51:16,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 36 classes define auto mapping attributes
DEBUG 2017-08-25 17:51:16,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.EditSupplierInput
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.SupplierListDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:51:16,275 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:51:16,276 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:51:16,277 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:51:16,277 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:51:17,810 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:51:17,812 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:51:17,813 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:51:17,814 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Suppliers.ISupplierAppService' with service name 'app/supplier'.
DEBUG 2017-08-25 17:51:17,815 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:51:17,816 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:51:17,819 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:51:17,820 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:51:17,822 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:51:17,823 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:51:17,824 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:51:17,825 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:51:17,826 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:51:17,828 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:51:17,829 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:51:18,317 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"868779cd-4185-4341-9caf-59202d97d2b5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:51:18.2727117+08:00","Properties":{}}
DEBUG 2017-08-25 17:51:37,550 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 868779cd-4185-4341-9caf-59202d97d2b5
DEBUG 2017-08-25 17:51:38,841 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6bd5bf00-9756-4573-80e6-2412b586e1a7","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:51:38.8412511+08:00","Properties":{}}
DEBUG 2017-08-25 17:51:38,863 [86   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6bd5bf00-9756-4573-80e6-2412b586e1a7
DEBUG 2017-08-25 17:51:41,218 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6bd5bf00-9756-4573-80e6-2412b586e1a7
DEBUG 2017-08-25 17:51:41,919 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e8d14d5b-9681-4f2b-a71e-692a5e975a1c","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:51:41.9190438+08:00","Properties":{}}
DEBUG 2017-08-25 17:51:41,926 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e8d14d5b-9681-4f2b-a71e-692a5e975a1c
DEBUG 2017-08-25 17:53:25,881 [75   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:53:25,882 [75   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:25,883 [75   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:25,883 [75   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:53:28,560 [6    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:53:28,689 [6    ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:53:28,696 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,698 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,698 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,698 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,698 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,698 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,699 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,699 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,699 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,699 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,699 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,700 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,700 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,700 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,700 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,700 [6    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:28,703 [6    ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:53:29,088 [6    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:29,088 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:29,088 [6    ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:29,088 [6    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:29,471 [6    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:30,131 [6    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:53:30,137 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:53:30,144 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:53:30,146 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:53:30,147 [6    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:53:30,217 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:30,267 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 36 classes define auto mapping attributes
DEBUG 2017-08-25 17:53:30,267 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.EditSupplierInput
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.SupplierListDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:53:30,271 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:53:30,272 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:53:30,273 [6    ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:53:31,682 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:53:31,683 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:53:31,685 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:53:31,686 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Suppliers.ISupplierAppService' with service name 'app/supplier'.
DEBUG 2017-08-25 17:53:31,688 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:53:31,689 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:53:31,690 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:53:31,691 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:53:31,693 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:53:31,694 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:53:31,695 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:53:31,696 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:53:31,697 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:53:31,699 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:53:31,700 [6    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:53:33,290 [140  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"e8d14d5b-9681-4f2b-a71e-692a5e975a1c","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:53:33.2364071+08:00","Properties":{}}
DEBUG 2017-08-25 17:53:35,732 [39   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:53:35,734 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
WARN  2017-08-25 17:53:38,490 [48   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate ABPProject.EntityFramework.ABPProjectDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'ABPProjectDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 ABPProject.EntityFramework.ABPProjectDbContext..ctor(String nameOrConnectionString) 位置 D:\项目\GitRepository\ABPProject\ABPProject.EntityFramework\EntityFramework\ABPProjectDbContext.cs:行号 63
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Context_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_get_Table_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.get_Table()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll_callback()
   在 Castle.Proxies.Invocations.EfRepositoryBase`3_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.EfRepositoryBase`3Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-08-25 17:53:38,492 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:38,492 [39   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:53:40,926 [37   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:53:40,944 [37   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:53:40,954 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,957 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,957 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,957 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,957 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,958 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,958 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,958 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,959 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,959 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,959 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,959 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,960 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,960 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,960 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,960 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:40,964 [37   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:53:41,170 [37   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:41,170 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:41,170 [37   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:41,170 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:53:41,538 [37   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:53:42,816 [37   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:53:42,824 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:53:42,833 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:53:42,836 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:53:42,837 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:53:42,929 [37   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:42,986 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 36 classes define auto mapping attributes
DEBUG 2017-08-25 17:53:42,986 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:53:42,989 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:53:42,989 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.EditSupplierInput
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.SupplierListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:53:42,990 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:53:42,991 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:53:44,415 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:53:44,416 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:53:44,418 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:53:44,420 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Suppliers.ISupplierAppService' with service name 'app/supplier'.
DEBUG 2017-08-25 17:53:44,421 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:53:44,422 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:53:44,423 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:53:44,425 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:53:44,426 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:53:44,427 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:53:44,428 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:53:44,430 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:53:44,431 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:53:44,432 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:53:44,433 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:53:44,891 [140  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"e8d14d5b-9681-4f2b-a71e-692a5e975a1c","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:53:44.8413573+08:00","Properties":{}}
DEBUG 2017-08-25 17:53:58,490 [55   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:53:58,491 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:58,491 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:53:58,491 [55   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:54:01,720 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:54:01,847 [16   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:54:01,854 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,857 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,857 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,857 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,857 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,857 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,858 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,858 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,858 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,858 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,858 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,859 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,859 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,859 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,859 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,859 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:01,862 [16   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:54:02,238 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:02,238 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:02,238 [16   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:02,238 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:02,615 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:03,265 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:54:03,272 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:54:03,278 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:54:03,280 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:54:03,282 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:54:03,385 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:54:03,459 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 36 classes define auto mapping attributes
DEBUG 2017-08-25 17:54:03,459 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:54:03,464 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:54:03,464 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.EditSupplierInput
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.SupplierListDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:54:03,465 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:54:03,466 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:54:03,467 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:54:05,029 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:54:05,031 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:54:05,032 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:54:05,033 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Suppliers.ISupplierAppService' with service name 'app/supplier'.
DEBUG 2017-08-25 17:54:05,034 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:54:05,036 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:54:05,037 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:54:05,038 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:54:05,039 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:54:05,041 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:54:05,042 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:54:05,044 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:54:05,045 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:54:05,046 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:54:05,048 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:54:06,854 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"e8d14d5b-9681-4f2b-a71e-692a5e975a1c","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:54:06.8025061+08:00","Properties":{}}
DEBUG 2017-08-25 17:54:36,257 [140  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-08-25 17:54:36,258 [140  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:54:36,259 [140  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:54:36,259 [140  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-08-25 17:54:44,388 [37   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-08-25 17:54:44,408 [37   ] Abp.Modules.AbpModuleManager             - Found 16 ABP modules in total.
DEBUG 2017-08-25 17:54:44,415 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Web.ABPProjectWebModule, ABPProject.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,424 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectDataModule, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,424 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.0.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,425 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,425 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,425 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,425 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,425 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectCoreModule, ABPProject.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,425 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.ABPProjectApplicationModule, ABPProject.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: ABPProject.Api.ABPProjectWebApiModule, ABPProject.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,426 [37   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:44,430 [37   ] Abp.Modules.AbpModuleManager             - 16 modules loaded.
DEBUG 2017-08-25 17:54:44,649 [37   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:44,649 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:44,649 [37   ] o.Configuration.LanguageManagementConfig - Converted ABPProject (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:44,649 [37   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-08-25 17:54:45,014 [37   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: ABPProject.EntityFramework.ABPProjectDbContext, ABPProject.EntityFramework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-08-25 17:54:46,409 [37   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-08-25 17:54:46,423 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-08-25 17:54:46,430 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-08-25 17:54:46,446 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: ABPProject
DEBUG 2017-08-25 17:54:46,447 [37   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-08-25 17:54:46,536 [37   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-08-25 17:54:46,582 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 36 classes define auto mapping attributes
DEBUG 2017-08-25 17:54:46,582 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-08-25 17:54:46,586 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-08-25 17:54:46,586 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.CreateUserInput
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Users.Dto.UserListDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.EditSupplierInput
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Suppliers.Dto.SupplierListDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderInput
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.EditSalesOrderItemDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventLocationDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.InventSiteDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderItemListDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.SalesOrders.Dto.SalesOrderListDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.EditUserInput
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionGroupDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.PermissionListDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Roles.Dto.RoleListDto
DEBUG 2017-08-25 17:54:46,587 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.EditReceiptInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Receipts.Dto.ReceiptListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.EditPurchaseOrderItemDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderItemListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.PurchaseOrders.Dto.PurchaseOrderListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.EditProjectInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Projects.Dto.ProjectListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.EditProductInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.ProductListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Products.Dto.InventBatchDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.OrganizationUnits.Dto.OuListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.CreateTenantInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.MultiTenancy.Dto.TenantListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.DeliverListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Delivers.Dto.EditDeliverInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.ClientListDto
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Clients.Dto.EditClientInput
DEBUG 2017-08-25 17:54:46,588 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.ClientPayments.Dto.ClientPaymentDto
DEBUG 2017-08-25 17:54:46,589 [37   ] Abp.AutoMapper.AbpAutoMapperModule       - ABPProject.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-08-25 17:54:47,994 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-08-25 17:54:47,995 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-08-25 17:54:47,997 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.UserCenter.IUserCenterAppService' with service name 'app/userCenter'.
DEBUG 2017-08-25 17:54:47,998 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Suppliers.ISupplierAppService' with service name 'app/supplier'.
DEBUG 2017-08-25 17:54:47,999 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.SalesOrders.ISalesOrderAppService' with service name 'app/salesOrder'.
DEBUG 2017-08-25 17:54:48,001 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-08-25 17:54:48,002 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Receipts.IReceiptAppService' with service name 'app/receipt'.
DEBUG 2017-08-25 17:54:48,003 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.PurchaseOrders.IPurchaseOrderAppService' with service name 'app/purchaseOrder'.
DEBUG 2017-08-25 17:54:48,005 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Projects.IProjectAppService' with service name 'app/project'.
DEBUG 2017-08-25 17:54:48,007 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Products.IProductAppService' with service name 'app/product'.
DEBUG 2017-08-25 17:54:48,009 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.OrganizationUnits.IOuAppService' with service name 'app/ou'.
DEBUG 2017-08-25 17:54:48,011 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-08-25 17:54:48,013 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Delivers.IDeliverAppService' with service name 'app/deliver'.
DEBUG 2017-08-25 17:54:48,014 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.Clients.IClientAppService' with service name 'app/client'.
DEBUG 2017-08-25 17:54:48,016 [37   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'ABPProject.ClientPayments.IClientPaymentAppService' with service name 'app/clientPayment'.
DEBUG 2017-08-25 17:54:48,486 [89   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"e8d14d5b-9681-4f2b-a71e-692a5e975a1c","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:54:48.4409842+08:00","Properties":{}}
DEBUG 2017-08-25 17:55:15,530 [197  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e8d14d5b-9681-4f2b-a71e-692a5e975a1c
DEBUG 2017-08-25 17:55:16,481 [197  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"315a5fc7-9c58-4d2d-bae8-748c121f1647","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:55:16.4814747+08:00","Properties":{}}
DEBUG 2017-08-25 17:55:16,506 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 315a5fc7-9c58-4d2d-bae8-748c121f1647
DEBUG 2017-08-25 17:55:19,167 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 315a5fc7-9c58-4d2d-bae8-748c121f1647
DEBUG 2017-08-25 17:55:19,736 [183  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"75bc5942-c77c-4516-ab49-0ab9946b8790","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:55:19.7368017+08:00","Properties":{}}
DEBUG 2017-08-25 17:55:19,741 [188  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 75bc5942-c77c-4516-ab49-0ab9946b8790
DEBUG 2017-08-25 17:55:41,509 [93   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 75bc5942-c77c-4516-ab49-0ab9946b8790
DEBUG 2017-08-25 17:55:42,294 [93   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"512f7f28-b947-4d8a-9401-9f854c676f6e","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:55:42.2946637+08:00","Properties":{}}
DEBUG 2017-08-25 17:55:42,302 [88   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 512f7f28-b947-4d8a-9401-9f854c676f6e
DEBUG 2017-08-25 17:55:45,078 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 512f7f28-b947-4d8a-9401-9f854c676f6e
DEBUG 2017-08-25 17:55:45,721 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"4f87566e-4bf0-4f37-9716-81e60d673273","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:55:45.7215151+08:00","Properties":{}}
DEBUG 2017-08-25 17:55:45,725 [88   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 4f87566e-4bf0-4f37-9716-81e60d673273
DEBUG 2017-08-25 17:55:47,778 [96   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 4f87566e-4bf0-4f37-9716-81e60d673273
DEBUG 2017-08-25 17:55:48,330 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"bdcd642f-653b-4a28-a4f0-6eb9cf6f5a0b","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:55:48.3302605+08:00","Properties":{}}
DEBUG 2017-08-25 17:55:48,332 [89   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: bdcd642f-653b-4a28-a4f0-6eb9cf6f5a0b
DEBUG 2017-08-25 17:56:01,589 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: bdcd642f-653b-4a28-a4f0-6eb9cf6f5a0b
DEBUG 2017-08-25 17:56:02,333 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"39d5ff62-dab4-48e5-bad2-2ad5d12dea29","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:02.3339594+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:02,340 [92   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 39d5ff62-dab4-48e5-bad2-2ad5d12dea29
DEBUG 2017-08-25 17:56:04,821 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 39d5ff62-dab4-48e5-bad2-2ad5d12dea29
DEBUG 2017-08-25 17:56:05,464 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b5c6a594-6635-4313-ad9a-739202718fcb","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:05.464711+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:05,468 [188  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b5c6a594-6635-4313-ad9a-739202718fcb
DEBUG 2017-08-25 17:56:06,980 [188  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b5c6a594-6635-4313-ad9a-739202718fcb
DEBUG 2017-08-25 17:56:07,506 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6a67766a-81f8-43bb-a5bb-195ce889cc52","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:07.5069665+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:07,510 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6a67766a-81f8-43bb-a5bb-195ce889cc52
DEBUG 2017-08-25 17:56:14,488 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6a67766a-81f8-43bb-a5bb-195ce889cc52
DEBUG 2017-08-25 17:56:15,126 [161  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"932ada08-052f-4017-a4ee-e2cdfd5316e1","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:15.1262661+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:15,129 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 932ada08-052f-4017-a4ee-e2cdfd5316e1
DEBUG 2017-08-25 17:56:17,122 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 932ada08-052f-4017-a4ee-e2cdfd5316e1
DEBUG 2017-08-25 17:56:17,863 [89   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f9734a26-0112-418c-bd44-4fbbde80f0d0","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:17.8632927+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:17,866 [92   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f9734a26-0112-418c-bd44-4fbbde80f0d0
DEBUG 2017-08-25 17:56:19,597 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f9734a26-0112-418c-bd44-4fbbde80f0d0
DEBUG 2017-08-25 17:56:20,131 [88   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5fa580aa-3873-440e-b70e-b9d5ee3d3322","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:20.1316028+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:20,134 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5fa580aa-3873-440e-b70e-b9d5ee3d3322
DEBUG 2017-08-25 17:56:33,868 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5fa580aa-3873-440e-b70e-b9d5ee3d3322
DEBUG 2017-08-25 17:56:34,495 [140  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d9c7c062-b860-40af-a743-cbb176180e8f","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:34.4956078+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:34,498 [89   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d9c7c062-b860-40af-a743-cbb176180e8f
DEBUG 2017-08-25 17:56:36,740 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d9c7c062-b860-40af-a743-cbb176180e8f
DEBUG 2017-08-25 17:56:37,441 [92   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"53e704d2-c581-45df-a3d6-66a55bac2567","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:37.4412672+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:37,444 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 53e704d2-c581-45df-a3d6-66a55bac2567
DEBUG 2017-08-25 17:56:40,490 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 53e704d2-c581-45df-a3d6-66a55bac2567
DEBUG 2017-08-25 17:56:41,194 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2ea8f43c-6251-4d7b-aa6b-70cc80a8b81a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:56:41.1936289+08:00","Properties":{}}
DEBUG 2017-08-25 17:56:41,197 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2ea8f43c-6251-4d7b-aa6b-70cc80a8b81a
DEBUG 2017-08-25 17:57:06,735 [97   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2ea8f43c-6251-4d7b-aa6b-70cc80a8b81a
DEBUG 2017-08-25 17:57:07,634 [88   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"75abfc69-6b07-4fb6-9335-4aee803468c2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:57:07.6344275+08:00","Properties":{}}
DEBUG 2017-08-25 17:57:07,638 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 75abfc69-6b07-4fb6-9335-4aee803468c2
DEBUG 2017-08-25 17:57:31,591 [96   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 75abfc69-6b07-4fb6-9335-4aee803468c2
DEBUG 2017-08-25 17:57:32,548 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"18b43e8b-2a40-4122-824f-85dce8f7a7ec","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:57:32.5481321+08:00","Properties":{}}
DEBUG 2017-08-25 17:57:32,555 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 18b43e8b-2a40-4122-824f-85dce8f7a7ec
DEBUG 2017-08-25 17:57:33,932 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 18b43e8b-2a40-4122-824f-85dce8f7a7ec
DEBUG 2017-08-25 17:57:34,514 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b810ffbf-bf90-4a7e-939d-0da3549ebb2e","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2017-08-25T17:57:34.5148688+08:00","Properties":{}}
DEBUG 2017-08-25 17:57:34,518 [140  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b810ffbf-bf90-4a7e-939d-0da3549ebb2e
