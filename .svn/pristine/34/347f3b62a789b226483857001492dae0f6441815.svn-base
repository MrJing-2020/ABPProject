<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link href="Content/bootstrap.min.css" rel="stylesheet" />
    <link href="Content/bootstrap-table.min.css" rel="stylesheet" />
</head>
<body>
<div class="container">
    <div id="toolbar">
        <button id="remove" class="btn btn-danger" disabled>
            <i class="glyphicon glyphicon-remove"></i> Delete
        </button>
    </div>
    <table id="table"
           data-toolbar="#toolbar"
           data-search="true"
           data-show-refresh="true"
           data-show-toggle="true"
           data-show-columns="true"
           data-show-export="true"
           data-detail-view="true"
           data-detail-formatter="detailFormatter"
           data-minimum-count-columns="2"
           data-show-pagination-switch="true"
           data-pagination="true"
           data-id-field="id"
           data-page-list="[10, 25, 50, 100, ALL]"
           data-show-footer="false"
           data-side-pagination="server"
           data-url="http://localhost:61759/api/services/app/role/GetPagedRole"
           data-response-handler="responseHandler">
    </table>
</div>

    <script src="Scripts/jquery-2.2.0.min.js"></script>
    <script src="Scripts/bootstrap.min.js"></script>
    <script src="Scripts/bootstrap-table.min.js"></script>
    <script src="Scripts/bootstrap-table-export.js"></script>
    <script src="Scripts/bootstrap-table-editable.js"></script>
    <script src="Scripts/tableExport.js"></script>
    <script src="Scripts/bootstrap-editable.js"></script>

<script>
    var $table = $('#table'),
        $remove = $('#remove'),
        selections = [];
    function initTable() {
        $table.bootstrapTable({
            height: getHeight(),
            columns: [
                        [
                            {
                                field: 'state',
                                checkbox: true,
                                rowspan: 2,
                                align: 'center',
                                valign: 'middle'
                            },
                            {
                                title: 'ID',
                                field: 'id',
                                rowspan: 2,
                                align: 'center',
                                valign: 'middle',
                            },
                            {
                                title: '角色详情',
                                colspan: 4,
                                align: 'center'
                            }
                        ],
                        [
                            {
                                field: 'displayName',
                                title: '昵称',
                                sortable: true,
                                align: 'center'
                            },
                            {
                                field: 'name',
                                title: '名字',
                                sortable: true,
                                align: 'center'
                            },
                            {
                                field: 'isStatic',
                                title: '是否静态',
                                align: 'center'
                            },
                            {
                                field: '操作',
                                title: 'Item Operate',
                                align: 'center',
                                events: operateEvents,
                                formatter: operateFormatter
                            }
                        ]
            ],
            method: "POST",
            queryParams: function (params) {
                return JSON.stringify({
                    "SkipCount": 0,
                    "MaxResultCount": 10
                })
            },
            responseHandler: function (res) {
                var data = {
                    "total": 2,
                    "rows": res.result.items
                }
                $.each(data.rows, function (i, row) {
                    row.state = false
                });
                return data
            }
        });
        // sometimes footer render error.
        setTimeout(function () {
            $table.bootstrapTable('resetView');
        }, 200);
        $table.on('check.bs.table uncheck.bs.table ' +
            'check-all.bs.table uncheck-all.bs.table', function () {
            $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
            // save your data, here just save the current page
            selections = getIdSelections();
            // push or splice the selections if you want to save all data selections
        });
        //$table.on('expand-row.bs.table', function (e, index, row, $detail) {
        //    if (index % 2 == 1) {
        //        $detail.html('Loading from ajax request...');
        //        $.get('LICENSE', function (res) {
        //            $detail.html(res.replace(/\n/g, '<br>'));
        //        });
        //    }
        //});
        $table.on('all.bs.table', function (e, name, args) {
            console.log(name, args);
        });
        $remove.click(function () {
            var ids = getIdSelections();
            $table.bootstrapTable('remove', {
                field: 'id',
                values: ids
            });
            $remove.prop('disabled', true);
        });
        $(window).resize(function () {
            $table.bootstrapTable('resetView', {
                height: getHeight()
            });
        });
    }
    function getIdSelections() {
        return $.map($table.bootstrapTable('getSelections'), function (row) {
            return row.id
        });
    }
    function responseHandler(res) {
//        $.each(res.rows, function (i, row) {
//            row.state = $.inArray(row.id, selections) !== -1;
//        });
        return res.result.items;
    }
    function detailFormatter(index, row) {
        var html = [];
        $.each(row, function (key, value) {
            html.push('<p><b>' + key + ':</b> ' + value + '</p>');
        });
        return html.join('');
    }
    function operateFormatter(value, row, index) {
        return [
            '<a class="like" href="javascript:void(0)" title="Like">',
            '<i class="glyphicon glyphicon-heart"></i>',
            '</a>  ',
            '<a class="remove" href="javascript:void(0)" title="Remove">',
            '<i class="glyphicon glyphicon-remove"></i>',
            '</a>'
        ].join('');
    }
    window.operateEvents = {
        'click .like': function (e, value, row, index) {
            alert('You click like action, row: ' + JSON.stringify(row));
        },
        'click .remove': function (e, value, row, index) {
            $table.bootstrapTable('remove', {
                field: 'id',
                values: [row.id]
            });
        }
    };
    function totalTextFormatter(data) {
        return 'Total';
    }
    function totalNameFormatter(data) {
        return data.length;
    }
    function totalPriceFormatter(data) {
        var total = 0;
        $.each(data, function (i, row) {
            total += +(row.price.substring(1));
        });
        return '$' + total;
    }
    function getHeight() {
        return $(window).height() - $('h1').outerHeight(true);
    }

    $(function () {
        initTable();
    });
</script>
</body>
</html>